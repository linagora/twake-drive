services:

  node:
    image: tdrive/tdrive-node:test
    build:
      context: .
      dockerfile: docker/tdrive-node/Dockerfile
      target: test
    volumes:
       - ./coverage/:/usr/src/app/coverage/
    environment:
      - LOG_LEVEL=error
      - NODE_ENV=test
      # - ACCOUNTS_TYPE=remote
      - SEARCH_DRIVER=mongodb
      - DB_DRIVER=mongodb
      - PUBSUB_TYPE=local
      # - PUBSUB_URLS=amqp://guest:guest@rabbitmq:5672
      - SEARCH_ES_ENDPOINT=http://elasticsearch:9200
      - SEARCH_ES_FLUSHINTERVAL=1
      - STORAGE_DRIVER=S3
      - STORAGE_S3_BUCKET=drive
      - STORAGE_S3_HOME_DIRECTORY=tdrive
      - STORAGE_S3_ENDPOINT=minio
      - STORAGE_S3_ACCESS_KEY=admin
      - STORAGE_S3_SECRET_KEY=adminminio
      - DIAG_PROBE_SECRET=super_diagnostic_probe_secret
    depends_on:
      minio:
        condition: service_healthy
      mongo:
        condition: service_healthy
      av:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      createbucket:
        condition: service_completed_successfully
    links:
      - mongo
    networks:
      - tdrive_network
      # - rabbitmq

  nginx:
    image: tdrive/tdrive-frontend
    ports:
      - 8000:80
    volumes:
      - ./docker-data/logs/nginx/:/var/log/nginx
      - ./docker-data/letsencrypt/:/etc/letsencrypt/
      - ./frontend/:/tdrive-react/
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:80/.well-known/
